{"version":3,"file":"index.js","sources":["../src/useIsScrolledIntoView.js"],"sourcesContent":["'use strict';\nimport { useState, useCallback, useEffect } from 'react';\nconst isInViewport = (el, { top: t, height: h } = el.getBoundingClientRect()) => t <= window.innerHeight && t + h >= 0;\nconst useIsScrolledIntoView = (ref, propState = true) => {\n    const [ isIntoView, setIsIntoView ] = useState(propState);\n    const handleOnScroll = useCallback(() => {\n        setIsIntoView(isInViewport(ref.current));\n    }, []);\n    useEffect(\n        () => {\n            window.addEventListener('scroll', handleOnScroll);\n            return () => {\n                window.removeEventListener('scroll', handleOnScroll);\n            };\n        },\n        [ ref ]\n    );\n    return isIntoView;\n};\nexport default useIsScrolledIntoView;\n"],"names":["useState","useCallback","useEffect"],"mappings":";;;;;;AAEA,MAAM,YAAY,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,qBAAqB,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,WAAW,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACvH,MAAM,qBAAqB,GAAG,CAAC,GAAG,EAAE,SAAS,GAAG,IAAI,KAAK;IACrD,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,GAAGA,cAAQ,CAAC,SAAS,CAAC,CAAC;IAC1D,MAAM,cAAc,GAAGC,iBAAW,CAAC,MAAM;QACrC,aAAa,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;KAC5C,EAAE,EAAE,CAAC,CAAC;IACPC,eAAS;QACL,MAAM;YACF,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;YAClD,OAAO,MAAM;gBACT,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;aACxD,CAAC;SACL;QACD,EAAE,GAAG,EAAE;KACV,CAAC;IACF,OAAO,UAAU,CAAC;CACrB,CAAC;;;;"}